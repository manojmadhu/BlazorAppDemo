@rendermode @(new InteractiveServerRenderMode(false))

<Sidebar Href="/"
         IconName="IconName.Gem"
         Title="ToDo Demo"
         DataProvider="SidebarDataProvider" />

@code {
    IEnumerable<NavItem>? navItems;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Href = "/Counter", IconName = IconName.HouseDoorFill, Text = "Getting Started"},
            new NavItem { Href = "/AlertComponent", IconName = IconName.CheckCircleFill, Text = "Alerts"},
            new NavItem { Href = "/registration", IconName = IconName.InputCursorText, Text = "Registration"},
            new NavItem { Href = "/breadcrumb", IconName = IconName.SegmentedNav, Text = "Breadcrumb"},
            new NavItem { Href = "/sidebar", IconName = IconName.LayoutSidebarInset, Text = "Sidebar"},
        };
        return navItems;
    }
}
